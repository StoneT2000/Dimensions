version: 2.1
orbs:
  node: circleci/node@1.1.6
  codecov: codecov/codecov@1.0.2

executors:
  language-build:
    docker:
      - image: stonet2000/dimensions:latest
      # - image: circleci/mongo:latest
      #   environment:
      #     MONGO_INITDB_ROOT_USERNAME: root
      #     MONGO_INITDB_ROOT_PASSWORD: rootpassword

commands:
  setup_services:
    steps:
      - setup_remote_docker:
          version: 19.03.8
      - run: apt-get install -y docker-cli
      - run:
          name: Pull standard images for Dimensions
          command: docker pull docker.io/stonet2000/dimensions
      # - run:
      #     name: Pull other images used for testing
      #     command: ./pull_all_test_docker_images.sh
      # - run:
      #     name: install dockerize
      #     command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
      #     environment:
      #       DOCKERIZE_VERSION: v0.3.0
      # - run:
      #     name: Wait for db
      #     command: |
      #       dockerize -timeout 1m \
      #         -wait tcp://localhost:27017 `# mongo`

jobs:
  lint:
    executor:
      name: language-build
    steps:
      - checkout
      - node/with-cache:
          steps:
            - run: npm install
            - run: npm run lint
  build-and-test:
    executor:
      name: language-build
    steps:
      - setup_services
      - checkout
      - node/with-cache:
          steps:
            - run: npm install
            - run: npm run test
      - run: npm run codecov
      - store_artifacts:
          path: coverage.lcov
          destination: coverage.lcov

      - codecov/upload:
          file: coverage.lcov
workflows:
  build-and-test:
    jobs:
      - build-and-test
  lint:
    jobs:
      - lint
